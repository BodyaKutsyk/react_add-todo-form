{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","currentUser","users","find","cn","findUser","TodoList","todos","map","todo","App","useState","count","setCount","todosFromServer","list","setList","setTitle","titleError","setTitleError","selectedUser","setSelectedUser","userError","setUserError","action","method","onSubmit","event","preventDefault","trim","length","Math","max","usersFromServer","elem","addTodo","htmlFor","type","placeholder","value","onChange","currentValue","target","defaultValue","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9ce7f674.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../types/user';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n    {user?.name}\n  </a>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport users from '../../api/users';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  id: number,\n  title: string,\n  userId: number,\n  completed: boolean,\n};\n\nexport const TodoInfo: React.FC<Props> = ({\n  id,\n  title,\n  userId,\n  completed,\n}) => {\n  const currentUser = users.find(user => user.id === userId) || users[0];\n\n  return (\n    <article\n      data-id={id}\n      key={id}\n      className={cn(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      <UserInfo user={currentUser} />\n    </article>\n  );\n};\n","import { Todo } from '../../types/todo';\nimport { User } from '../../types/user';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  users: User[],\n  todos: Todo[],\n};\n\nconst findUser = (id: number, users: User[]): User => {\n  return users.find((user: User) => user.id === id) || users[0];\n};\n\nexport const TodoList: React.FC<Props> = ({ users, todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        id={todo.id}\n        title={todo.title}\n        userId={findUser(todo.userId, users).id}\n        completed={todo.completed}\n        key={todo.id}\n      />\n    ))}\n  </section>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/user';\nimport { Todo } from './types/todo';\n\nexport const App = () => {\n  const [count, setCount] = useState(0);\n  const [list, setList] = useState<Todo[]>([...todosFromServer]);\n\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n\n  const [selectedUser, setSelectedUser] = useState<User | string>('');\n  const [userError, setUserError] = useState(false);\n\n  const addTodo = () => {\n    const id = Math.max(...list.map(user => user.id)) + 1;\n    const user = usersFromServer.find(elem => elem.name === selectedUser)\n    || usersFromServer[0];\n\n    setList([...list,\n      {\n        id,\n        title,\n        completed: false,\n        userId: user.id,\n      },\n    ]);\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const currentValue = event.target.value;\n\n    setTitle(currentValue);\n\n    if (currentValue.trim().length > 0) {\n      setTitleError(false);\n    }\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUser(event.target.value);\n    setUserError(false);\n  };\n\n  const reset = () => {\n    setSelectedUser('');\n    setTitle('');\n    setUserError(false);\n    setTitleError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setTitleError(title.trim().length === 0);\n    setUserError(!selectedUser);\n\n    if (!selectedUser || title.trim().length === 0) {\n      return;\n    }\n\n    addTodo();\n    reset();\n    setCount(count + 1);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n        key={count}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">Title: </label>\n          <input\n            id=\"titleInput\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n\n          {titleError && (\n            <span className=\"error\">Please enter a title: </span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">User: </label>\n          <select\n            id=\"userSelect\"\n            data-cy=\"userSelect\"\n            onChange={handleUserChange}\n            defaultValue=\"\"\n          >\n            <option disabled value=\"\">Choose a user</option>\n            {usersFromServer.map(user => (\n              <option\n                value={user.name}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {userError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList\n        users={usersFromServer}\n        todos={list}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}